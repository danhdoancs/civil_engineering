MNL_1
mnl1 = read.table("dataset_MNL_1.txt")
mnl1 = read.table("dataset_MNL_1_std.txt", header=FALSE, sep=",")
mnl1
mnl11 = mnl1[mnl1$V4==1,]
mnl11
mnl12 = mnl1[mnl1$V4==2,]
mnl13 = mnl1[mnl1$V4==3,]
mnl14 = mnl1[mnl1$V4==4,]
mnl15 = mnl1[mnl1$V4==5,]
mnl16 = mnl1[mnl1$V4==6,]
mnl17 = mnl1[mnl1$V4==7,]
mnl11ccf = ccf(mnl11[,2],mnl11[,3],3000)
mnl13ccf = ccf(mnl13[,2],mnl13[,3],3000)
mnl14ccf = ccf(mnl14[,2],mnl14[,3],3000)
mnl15ccf = ccf(mnl15[,2],mnl15[,3],3000)
mnl16ccf = ccf(mnl16[,2],mnl16[,3],3000)
mnl17ccf = ccf(mnl17[,2],mnl17[,3],3000)
mnl1ccf = rbind(mnl11ccf$acf,mnl13ccf$acf,mnl14ccf$acf,mnl15ccf$acf, mnl16ccf$acf, mnl17ccf$acf)
mnl1ccf
write.csv(mnl1ccf, file="mnl_1_std_ccf.csv")
library("dtw")
distMatrix(mnl1ccf, method="DTW")
distMatrix = dist(mnl1ccf, method="DTW")
hc = hclust(distMatrix, method="average")
labels = c(1,3,4,5,6,7)
labels
plot(hc, labels=labels, main="")
mnl1ccf[2990:3010,]
mnl1ccf[,2990:3010]
mnl1ccf[,6000]
mnl2 = read.table("dataset_MNL_2_std.txt", header=FALSE, sep=",")
mnl21 = mnl2[mnl2$V4==1]
mnl21 = mnl2[mnl2$V4==1,]
mnl21
mnl23 = mnl2[mnl2$V4==3,]
mnl24 = mnl2[mnl2$V4==4,]
mnl25 = mnl2[mnl2$V4==5,]
mnl26 = mnl2[mnl2$V4==6,]
mnl27 = mnl2[mnl2$V4==7,]
mnl2ccf=rbind(ccf(mnl21[,2],mnl21[,3],3000)$acf,ccf(mnl23[,2],mnl23[,3],3000)$acf,ccf(mnl24[,2],mnl24[,3],3000)$acf,ccf(mnl25[,2],mnl25[,3],3000)$acf,ccf(mnl26[,2],mnl26[,3],3000)$acf,ccf(mnl27[,2],mnl27[,3],3000)$acf,)
mnl2ccf=rbind(ccf(mnl21[,2],mnl21[,3],3000)$acf,ccf(mnl23[,2],mnl23[,3],3000)$acf,ccf(mnl24[,2],mnl24[,3],3000)$acf,ccf(mnl25[,2],mnl25[,3],3000)$acf,ccf(mnl26[,2],mnl26[,3],3000)$acf,ccf(mnl27[,2],mnl27[,3],3000)$acf)
mnl2ccf
mnlccf = rbind(mnl1ccf,mnl2ccf)
mnlccf
labels
labels = rep(labels,2)
labels
distMatrix = dist(mnlccf, method="DTW")
hc = hclust(distMatrix,method="DTW")
hc = hclust(distMatrix,method="average")
plot(hc, labels=labels, main="")
png(filename="mnl1cluster.png")
plot(hc, labels=labels, main="")
dev.off()
png(filename="mnl1cluster.png")
plot(hc, labels=labels, main="MNL 1 Cluster")
dev.off()
install.packages("wavelets")
library("wavelets")
for (i in 1:nrow(mnl1ccf)) {
a = t(mnl1ccf[i,])
wt = dwt(a, filter="haar", boundary="periodic")
wtData <- rbind(wtData, unlist(c(wt@W,wt@V[[wt@level]])))
}

mnlccf
for (i in 1:nrow(mnl1ccf)) {
for (i in 1:nrow(mnlccf)) {
a = t(mnlccf[i,])
wt = dwt(a, filter="haar", boundary="periodic")
wtData <- rbind(wtData, unlist(c(wt@W,wt@V[[wt@level]])
}
for (i in 1:nrow(mnlccf)) {
a = t(mnlccf[i,])
wt = dwt(a, filter="haar", boundary="periodic")
wtData = rbind(wtData, unlist(c(wt@W,wt@V[[wt@level]])
}
for (i in 1:nrow(mnlccf)) {
a = t(mnlccf[i,])
wt = dwt(a, filter="haar", boundary="periodic")
wtData = rbind(wtData, unlist(c(wt@W,wt@V[[wt@level]])))

wtData = NULL
for (i in 1:nrow(sc)) {
+  a <- t(sc[i,])
+  wt <- dwt(a, filter=”haar”, boundary=”periodic”)
+  wtData <- rbind(wtData, unlist(c(wt@W,wt@V[[wt@level]])))
+ }
for (i in 1:nrow(mnlccf)) {
a = t(mnlccf[i,])
wt = dwt(a, filter="haar", boundary="periodic")
wtData <- rbind(wtData, unlist(c(wt@W,wt@V[[wt@level]])))
}
a
wt = dwt(a, filter="haar", boundary="periodic")
write.csv(mnlccf,file="mnlccf.csv")
dim(a)
dim(a)[1]
dim(a)
a = mnlccf[1,]
dim(a)
a
wt = dwt(a, filter="haar", boundary="periodic")
wt
for (i in 1:nrow(mnlccf)) {
a = t(mnlccf[i,])
wt = dwt(a, filter="haar", boundary="periodic")
wtData = rbind(wtData, unlist(c(wt@W,wt@V[[wt@level]])))
}
for (i in 1:nrow(mnlccf)) {
a = (mnlccf[i,])
wt = dwt(a, filter="haar", boundary="periodic")
wtData = rbind(wtData, unlist(c(wt@W,wt@V[[wt@level]])))
}
dim(wtData)
wtData
wtData = as.data.frame(wtData)
wtData
dim(wtData)
wtSc = data.frame(cbind(labels,wtData))
wtSc
wtSc[,1:10]
library(party)
install.packages(party)
install.packages("party")
write.csv(wtSc, file="mnl_dwt.csv")
library(party)
ct = ctree(lables~ ., data=wtSc, controls = ctree_control(minsplit=30, minbucket=10, maxdepth=5))
ct = ctree(labels~ ., data=wtSc, controls = ctree_control(minsplit=30, minbucket=10, maxdepth=5))
ct
pLabels = predict(ct)
pLabels
ct = ctree(labels~ ., data=wtSc, controls = ctree_control(minsplit=1, minbucket=1, maxdepth=5))
ct
pLabels = predict(ct)
table(labels, pLabels)
labels
